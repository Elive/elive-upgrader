#!/bin/bash
SOURCE="$0"
source /usr/lib/elive-tools/functions
el_make_environment
. gettext.sh
#TEXTDOMAIN="elive-upgrader"
#export TEXTDOMAIN

# Lock system (good one) {{{
lockfile="/tmp/.$(basename $0)-${USER}.lock"

exit_ok(){
    rm -f "$lockfile"
}
exit_error(){
    rm -f "$lockfile"
}

if [[ -r "$lockfile" ]] ; then
    PROCCESS="$(cat $lockfile)"
else
    PROCCESS=" "
fi
if (ps up $PROCCESS) 1>/dev/null 2>&1 ; then
    el_error "$(basename $0) already running"
    exit
else
    echo $$ > "$lockfile"
fi

# traps needs to be after the lock verification, in order to not remove it when we are already running
trap "exit_ok" EXIT
trap "exit_error" 1 3 5 6 14 15 ERR TERM

# SET the lock file
echo "$$" > "$lockfile"


# end lock system }}}

main(){
    # pre {{{
    version_elive="$( cat "/etc/elive-version" | grep "elive-version:" | awk '{print $2}' )"
    read -r version_elive <<< "$version_elive"

    hooks_d="/usr/lib/elive-upgrader/hooks"

    # FIXME: confs in /etc
    #news_history="$HOME/.config/$(basename $0)/news-history.txt"
    #if ! [[ -e "$news_history" ]] ; then
        #mkdir -p "$( dirname "$news_history" )"
    #fi

    # }}}
    # never run... checks {{{
    if grep -qs "boot=live" /proc/cmdline ; then
        exit
    fi

    # only run if first user
    if ! grep -qs "^first-user: $USER\$" /etc/elive-version ; then
        exit
    fi

    # TODO: disable in the future, new users could not have this enabled, or add them into the user-manager?
    if ! grep -qs "^%sudo.*NOPASSWD.*elive-upgrader-root" /etc/sudoers.d/privileges_upgrader || ! groups | grep -qs "sudo" ; then
        el_error "user is not in privileges_upgrader"
    fi

    # }}}

    # TODO:
    #   - packages-list to install include with a diff or something
    # - E conf upgrader? (diff something?)
    #     - we can run the enlightenment-remote too
    # - what if new packages / packages to remove? what if startup applications to add?
    #   - parse a list of packages to add, then a list of packages to remove, and in the end ... (what if conflicts? like adding a package that has a file added that was in another package first), we should do that interactively so that the user can say Yes or No in the install of packages for security reasons? (but we should have it already tested)
    # - lock unable to shutdown while upgrading, or terminal stuff
    #   - add a flag in /tmp/ and a daemon to check for that file and wait if stills open (and add a message to show/tell about that)


    for arg in "$@"
    do
        case "$arg" in
            --delayed)
                is_delayed=1
                shift
                ;;
        esac
    done

    if ((is_delayed)) ; then
        el_debug "delayed 20 seconds"
        sleep 20
    fi


    # update tool first (if)
    sudo elive-upgrader-root --update

    # hooks: root
    sudo elive-upgrader-root

    # always update before to run (if the package has been updated we want to fetch new code too)
    source /usr/lib/elive-ugprader/functions.sh

    # hooks: user
    run_hooks "user"

}

#
#  MAIN
#
main "$@"

# vim: set foldmethod=marker :



#!/bin/bash
SOURCE="$0"
source /usr/lib/elive-tools/functions
el_make_environment
. gettext.sh
TEXTDOMAIN="elive-upgrader"
export TEXTDOMAIN

# Lock system (good one) {{{
lockfile="/tmp/.$(basename $0)-${USER}.lock"
#set -x

exit_ok(){
    rm -f "$lockfile"
}
exit_error(){
    rm -f "$lockfile"
}

if [[ -r "$lockfile" ]] ; then
    PROCCESS="$(cat $lockfile)"
else
    PROCCESS=" "
fi
if (ps up $PROCCESS) 1>/dev/null 2>&1 ; then
    el_error "$(basename $0) already running"
    exit
else
    echo $$ > "$lockfile"
fi

# traps needs to be after the lock verification, in order to not remove it when we are already running
trap "exit_ok" EXIT
trap "exit_error" 1 3 5 6 14 15 ERR TERM

# SET the lock file
echo "$$" > "$lockfile"


# end lock system }}}

update_upgrader(){
    if el_package_update_last_version -c "elive-upgrader" ; then
        if ! timeout 240 apt-get -f install ; then
            el_error "problem with apt-get -f install: $(timeout 200 apt-get -f install )"
            exit 1
        fi
        if ! timeout 240 apt-get update ; then
            if ! timeout 480 apt-get update ; then
                el_error "problem updating package lists: $(timeout 200 apt-get update)"
                exit 1
            fi
        fi
        if ! timeout 240 apt-get install -y elive-upgrader ; then
            el_error "problem upgrading elive-upgrader: $(timeout 200 apt-get install -y elive-upgrader )"
            exit 1
        fi
    else
        el_debug "no new version of elive-ugprader found"
        exit 0
    fi

    #DISPLAY="" el_package_update_last_version -c "elive-upgrader"
}

main(){
    # pre {{{


    # }}}
    # never run on live mode {{{
    if grep -qs "boot=live" /proc/cmdline ; then
        exit
    fi

    # }}}

    for arg in "$@"
    do
        case "$arg" in
            #--delayed)
                #is_delayed=1
                #shift
                #;;
            --update)
                update_upgrader
                ;;
        esac
    done

    version_elive="$( cat "/etc/elive-version" | grep "elive-version:" | awk '{print $2}' )"
    version_upgrader="$( cat "/etc/elive-version" | grep "elive-fixes-version:" | awk '{print $2}' )"
    read -r version_elive <<< "$version_elive"
    read -r version_upgrader <<< "$version_upgrader"


    if [[ -z "$version_upgrader" ]] ; then
        version_upgrader="$version_elive"
        echo -e "elive-fixes-version: $version_upgrader" >> /etc/elive-version
    fi

    #if ((is_delayed)) ; then
        #el_debug "delayed 20 seconds"
        #sleep 20
    #fi

    # test
    #zenity --info --text="Hello world, im $(whoami) as $UID living in $HOME"

}

#
#  MAIN
#
main "$@"

# vim: set foldmethod=marker :
